version: 2
jobs:
  build:
    docker:
    - image: circleci/php:7.1-apache-node-browsers # The primary container where steps are run

    - image: circleci/mysql:8.0.4
      command: ['mysqld', '--character-set-server=utf8mb4', '--collation-server=utf8mb4_unicode_ci', '--default-authentication-plugin=mysql_native_password']
      environment:
        MYSQL_HOST: 127.0.0.1
        MYSQL_DATABASE: make_happy
        MYSQL_USER: root
        MYSQL_ALLOW_EMPTY_PASSWORD: true

    steps:
    - checkout
    - run:
        name: Install PHP exts
        command: |
          sudo docker-php-ext-install zip
          sudo docker-php-ext-configure intl
          sudo docker-php-ext-install intl
          sudo docker-php-ext-install pdo_mysql
    - run:
        # Our primary container isn't MYSQL so run a sleep command until it's ready.
        name: Waiting for MySQL to be ready
        command: |
          for i in `seq 1 10`;
          do
            nc -z 127.0.0.1 3306 && echo Success && exit 0
            echo -n .
            sleep 1
          done
          echo Failed waiting for MySQL && exit 1
    - run:
        name: Install MySQL CLI; Import dummy data; run an example query
        command: |
          sudo apt-get install default-mysql-client
          mysql -h 127.0.0.1 -u root make_happy < ./DDL/DDL_Struct_Make_Happy.sql
          mysql -h 127.0.0.1 -u root -e "create database test;"
          mysql -h 127.0.0.1 -u root -e "show databases;"
    - run:
        name: Docker Host
        command: |
          echo 127.0.0.1 mht-db | sudo tee -a /etc/hosts
          echo 127.0.0.1 mht-web | sudo tee -a /etc/hosts
    - run:
        name: Check apache
        command: |
          sudo service apache2 status
          php -v
    - run:
        name: Test Curl
        command: |
          curl http://127.0.0.1
    - run:
        name: Testing Cakephp
        command: |
          cd app
          ./Console/cake test app Controller/Component/NotificationComponent
workflows:
  version: 2
  build-deploy:
    jobs:
      - build:
          filters:
            branches:
              only: develop
